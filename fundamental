创建版本库
版本库又名仓库,英文名repository,可以简单理解成一个目录,这个目录里面的所有文件都可以被Git管理起来,每个文件的修改、删除,Git都能跟踪,以便任何时刻都可以追踪历史,或者在将来某个时刻可以"还原"。

第一步:首先,选择一个合适的地方,创建一个空目录(本示例在D盘)：

$ cd d:
$ mkdir XXX
$ cd XXX
$ pwd

/d/XXX
cd是进入到一个目录,mkdir表示新建。 pwd命令用于显示当前目录。我的仓库位于/d/XXX

第二步:通过git init命令把这个目录变成Git可以管理的仓库

$ git init
# Git初始化的命令，用于新建版本库
Initialized empty Git repository in d:/XXX/.git/
瞬间Git就把仓库建好了,而且告诉你是一个空的仓库(empty Git repository),到mygithub目录下我们返现多了一个.git的目录,这个目录是Git来跟踪管理版本库的,没事千万不要手动修改这个目录里面的文件,不然改乱了,就把Git仓库给破坏了。

5、把文件添加到版本库

在/d/XXX目录下 新建一个README.txt文件,内容为hello github

第一步:git add文件添加到仓库：

$ git add README
$ git commit -m "add README"

第一个命令是告诉Git要追踪什么文件，第二个命令是进行提交，并对此次提交做个简答说明。
当然，今后他再对README做什么修改，都可以这样做。Git会自动为此次提交生成一个16进制的版本号。
如果你要将所有文件都添加上去的话,使用git add .  "."表示添加当前目录中的所有文件



git 报错 pathspec 'XXX' did not match any file(s) known to git



第二步:git commit文件提交到仓库

$ git commit -m "hello github"

[master (root-commit) 0db7ba5]
1 file changed, 1 insertion(+)
create mode 100644 README.txt

git 报错 Please tell me who you are

  git config --global user.email "you@example.com"
  git config --global user.name "Your Name"

第三步:输入远程地址

$ git remote add origin https://github.com/user.name/XXX.git
上面origin 后面的https: 即是刚开始新建repository的时候生成的一个唯一的地址。

第四步:上传到github：

$ git push origin master

git 报错 error：failed to push some refs to 

git pull --rebase origin master

这条指令的意思是把远程库中的更新合并到本地库中，–rebase的作用是取消掉本地库中刚刚的commit，并把他们接到更新后的版本库之中。

git 报错 fatal: Updating an unborn branch with changes added to the index.

git commit -m "xx" 

git提交报错nothing added to commit but untracked files present

然后会提示输入用户名密码：
Username for 'https://github.com': yourUsername
Password for 'https://itmyhome2013@github.com': yourPassword
注意:密码不会显示在控制台。
提交成功后就可以进入github查看自己的项目了
